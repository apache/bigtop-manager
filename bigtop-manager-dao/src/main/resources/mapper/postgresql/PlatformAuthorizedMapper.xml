<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.bigtop.manager.dao.repository.PlatformAuthorizedDao">

    <sql id="baseColumns">
        id, credentials, platfotrm_id
    </sql>

    <resultMap id="PlatformAuthorizedResultMap" type="org.apache.bigtop.manager.dao.po.PlatformAuthorizedPO">
        <result property="credentials" column="credentials" typeHandler="org.apache.bigtop.manager.dao.handler.JsonTypeHandler"/>
    </resultMap>

    <select id="findByPlatformId" resultMap="PlatformAuthorizedResultMap">
        SELECT * FROM llm_platform_authorized WHERE id = #{id} AND is_deleted = false
    </select>

    <select id="findAllPlatform" resultMap="PlatformAuthorizedResultMap">
        SELECT * FROM llm_platform_authorized WHERE is_deleted = false
    </select>

    <insert id="saveWithCredentials" parameterType="org.apache.bigtop.manager.dao.po.PlatformAuthorizedPO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO llm_platform_authorized (platform_id, credentials)
        VALUES (#{platformId}, #{credentials, typeHandler=org.apache.bigtop.manager.dao.handler.JsonTypeHandler}::json)
    </insert>

</mapper>